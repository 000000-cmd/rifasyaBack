name: Deploy Spring Boot App to AWS EC2

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'corretto'

    - name: Build with Maven
      run: mvn clean package

    - name: Deploy to EC2
      uses: easingthemes/ssh-deploy@main
      with:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        REMOTE_HOST: ${{ secrets.EC2_HOST }}
        REMOTE_USER: ${{ secrets.EC2_USER }}
        SOURCE: "target/*.jar"
        TARGET: "/home/${{ secrets.EC2_USER }}"
        SCRIPT_AFTER: |
          echo "--- Despliegue en el servidor iniciado ---"
          
          # 1. Detener el proceso anterior usando el puerto 8080 (forma m치s confiable)
          echo "Buscando y deteniendo el proceso en el puerto 8080..."
          fuser -k 8080/tcp || true
          
          # 2. Navegar al directorio de despliegue
          cd /home/${{ secrets.EC2_USER }}
          
          # 3. Encontrar el nombre del JAR m치s reciente
          NEW_JAR=$(ls -t *.jar | head -n 1)
          echo "El nuevo JAR a ejecutar es: $NEW_JAR"
          
          # 4. Limpiar los JARs antiguos
          ls *.jar | grep -v "$NEW_JAR" | xargs -r rm
          echo "JARs antiguos eliminados."
          
          # 5. Iniciar la nueva versi칩n
          echo "Iniciando nueva versi칩n..."
          nohup java -Xmx1g -jar "$NEW_JAR" > app.log 2>&1 &
          echo "--- Despliegue completado ---"
